name: Unit Test

on:
  pull_request:
    branches:
      - main
      - dev 

jobs:
  source-branch-test:
    runs-on: ubuntu-latest
    outputs:
      coverages: ${{ steps.unit-test.outputs.coverages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup project
        run: |
          npm run setup

      - name: Unit Test
        id: unit-test
        run: |
          npx lerna run test:unit

          declare -A coverages
          for i in $(find . -name coverage-summary.json); do
            total=$(node -p -e "require('$i').total;")
            package=$(basename $(dirname $(dirname $i)))
            coverages+=([$package]=$total)
          done
          coverages+=(['a']='b')
          echo "::set-output name=coverages::$coverages",
        shell: bash

  target-branch-test:
    runs-on: ubuntu-latest
    outputs:
      coverages: ${{ steps.unit-test.outputs.coverages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup project
        run: |
          npm run setup

      - name: Unit Test
        id: unit-test
        run: |
          npx lerna run test:unit

          declare -A coverages
          for i in $(find . -name coverage-summary.json); do
            total=$(node -p -e "require('$i').total;")
            package=$(basename $(dirname $(dirname $i)))
            coverages+=([$package]=$total)
          done
          coverages+=(['a']='b')
          echo "::set-output name=coverages::$coverages",
        shell: bash

  compare-coverage:
    needs: [source-branch-test, target-branch-test]
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo ${{needs.source-branch-test.outputs.coverages }} 
          echo ${{needs.target-branch-test.outputs.coverages }} 

