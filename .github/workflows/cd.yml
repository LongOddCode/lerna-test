name: CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: "which version to bump(major, minor, patch, premajor, preminor, prepatch, prerelease)"
        required: true
        default: "prerelease"
      preid:
        description: "preid name(alpha or rc)"
        required: false
        default: "alpha"
      force:
        description: "force release even if no update(set --force-publish if necessary)"
        required: false
        default: ""
  schedule:
    - cron: "0 8 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: validate branch
        if: ${{ github.ref != 'refs/heads/dev' || github.ref != 'refs/heads/main' || (github.ref == 'refs/heads/dev' && (!startsWith(github.event.inputs.version, 'pre') || github.event.inputs.preid != 'alpha')) || (github.ref == 'refs/heads/main' && startsWith(github.event.inputs.version, 'pre') && github.event.inputs.preid != 'rc') }}
        run: |
          echo ${{ github.ref }}
          echo ${{ github.event.inputs.version }}
          echo ${{ github.event.inputs.preid}} | wc
          exit 1

      - name: Checkout dev branch
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: dev

      - name: Checkout release branch
        if: ${{ github.event_name != 'schedule' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc

      - name: Setup project
        run: |
          npm run setup

      - name: Setup git
        run: |
          git config --global user.name 'LongOddCode'
          git config --global user.email 'long@microsoft.com'

      - name: check whether vscode extension changed or not
        id: extension-checker
        run: |
          if npx lerna changed | grep 'lerna-test-pkg4';
          then
            echo "::set-output name=CHANGED::true"
          else
            echo "::set-output name=CHANGED::false"
          fi

      - name: release prerelease npm packages to npmjs.org
        if: ${{ startsWith(github.event.inputs.version, 'pre') }}
        run: |
          npx lerna publish --no-private --preid=${{github.event.inputs.preid }} --dist-tag=${{github.event.inputs.preid }} ${{ github.event.inputs.version }} --yes ${{ github.event.inputs.force }}

      - name: release stable npm packages to npmjs.org
        if: ${{ github.ref == 'refs/heads/main' && !startsWith(github.event.inputs.version, 'pre') }}
        run: |
          npx lerna publish --no-private --dist-tag=latest ${{ github.event.inputs.version }} --yes ${{ github.event.inputs.force }}

      - name: pack vsix
        id: pack-vsix
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            sleep 5
            cd ./packages/p4
            npm install
            npx vsce package
            VERSION=`ls *.vsix | awk -F '.vsix' '{print $1}'`
            echo "::set-output name=VERSION::$VERSION"

      - name: release VSCode extension to github
        if: ${{ steps.extension-checker.outputs.CHANGED == 'true' || github.event.inputs.force == '--force-publish' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.CD_PAT }}
          prerelease: true
          automatic_release_tag: ${{ steps.pack-vsix.outputs.VERSION }}
          files: |
            ./packages/**/*.vsix
